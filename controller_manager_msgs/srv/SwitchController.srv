# The SwitchController service allows you deactivate a number of controllers
# and activate a number of controllers, all in one single timestep of the
# controller manager's control loop.

# To switch controllers, specify
#  * the list of controller names to activate,
#  * the list of controller names to deactivate, and
#  * the strictness (BEST_EFFORT or STRICT)
#    * STRICT means that switching will fail if anything goes wrong (an invalid
#      controller name, a controller that failed to activate, etc. )
#    * BEST_EFFORT means that even when something goes wrong with on controller,
#      the service will still try to activate/stop the remaining controllers
#  * activate the controllers as soon as their hardware dependencies are ready, will
#    wait for all interfaces to be ready otherwise
#  * the timeout before aborting pending controllers. Zero for infinite

# The return value "ok" indicates if the controllers were switched
# successfully or not.  The meaning of success depends on the
# specified strictness.


string[] activate_controllers
string[] deactivate_controllers
string[] start_controllers       # DEPRECATED: Use activate_controllers filed instead
string[] stop_controllers        # DEPRECATED: Use deactivate_controllers filed instead
int32 strictness
int32 BEST_EFFORT=1
int32 STRICT=2
bool start_asap                 # DEPRECATED: Use activate_asap filed instead
bool activate_asap
builtin_interfaces/Duration timeout
---
bool ok
